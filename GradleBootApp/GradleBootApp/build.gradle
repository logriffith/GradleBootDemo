/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    
    // Apply Spring Boot plugin
    id "org.springframework.boot" version "2.4.3"
    
    // Apply Spring dependency management so we don't have to keep track of the version numbers
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    
    // Gradle plugin for executing Node.js scripts. Supports npm and Yarn.
    id "com.github.node-gradle.node" version "3.1.0"
    
}

// Specify the Java version
sourceCompatibility = 1.8

// Base package
group "com.challenge"

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

node{
	version = "14.15.3"
	npmVersion = "6.14.9"
	download = true
}

jar.dependsOn "npm_run_build"

jar {
	from "dist/GradleBootDemo-Front" into "static"
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
    
    // Spring MCV dependency
    implementation "org.springframework.boot:spring-boot-starter-web"
    
    implementation(project(":GradleBootDemo-Front"))
    
    // Spring DevTools dependency
    implementation "org.springframework.boot:spring-boot-devtools"
}

